题目：
给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。
你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。

解题思路：使用异或操作，1：两个相同的数异或为0；2:一个数与0异或为其本身；3：异或操作最后结果跟异或的顺序无关  当数组中所有元素异或过一遍最后的答案即为只出现过一次的元素

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int ret=0;
        for(auto t:nums){
            ret^=t;
        }
        return ret;
    }
};
